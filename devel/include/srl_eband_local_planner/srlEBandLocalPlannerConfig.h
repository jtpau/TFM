//#line 2 "/opt/ros/noetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"
// *********************************************************
//
// File autogenerated for the srl_eband_local_planner package
// by the dynamic_reconfigure package.
// Please do not edit.
//
// ********************************************************/

#ifndef __srl_eband_local_planner__SRLEBANDLOCALPLANNERCONFIG_H__
#define __srl_eband_local_planner__SRLEBANDLOCALPLANNERCONFIG_H__

#if __cplusplus >= 201103L
#define DYNAMIC_RECONFIGURE_FINAL final
#else
#define DYNAMIC_RECONFIGURE_FINAL
#endif

#include <dynamic_reconfigure/config_tools.h>
#include <limits>
#include <ros/node_handle.h>
#include <dynamic_reconfigure/ConfigDescription.h>
#include <dynamic_reconfigure/ParamDescription.h>
#include <dynamic_reconfigure/Group.h>
#include <dynamic_reconfigure/config_init_mutex.h>
#include <boost/any.hpp>

namespace srl_eband_local_planner
{
  class srlEBandLocalPlannerConfigStatics;

  class srlEBandLocalPlannerConfig
  {
  public:
    class AbstractParamDescription : public dynamic_reconfigure::ParamDescription
    {
    public:
      AbstractParamDescription(std::string n, std::string t, uint32_t l,
          std::string d, std::string e)
      {
        name = n;
        type = t;
        level = l;
        description = d;
        edit_method = e;
      }
      virtual ~AbstractParamDescription() = default;

      virtual void clamp(srlEBandLocalPlannerConfig &config, const srlEBandLocalPlannerConfig &max, const srlEBandLocalPlannerConfig &min) const = 0;
      virtual void calcLevel(uint32_t &level, const srlEBandLocalPlannerConfig &config1, const srlEBandLocalPlannerConfig &config2) const = 0;
      virtual void fromServer(const ros::NodeHandle &nh, srlEBandLocalPlannerConfig &config) const = 0;
      virtual void toServer(const ros::NodeHandle &nh, const srlEBandLocalPlannerConfig &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, srlEBandLocalPlannerConfig &config) const = 0;
      virtual void toMessage(dynamic_reconfigure::Config &msg, const srlEBandLocalPlannerConfig &config) const = 0;
      virtual void getValue(const srlEBandLocalPlannerConfig &config, boost::any &val) const = 0;
    };

    typedef boost::shared_ptr<AbstractParamDescription> AbstractParamDescriptionPtr;
    typedef boost::shared_ptr<const AbstractParamDescription> AbstractParamDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template <class T>
    class ParamDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractParamDescription
    {
    public:
      ParamDescription(std::string a_name, std::string a_type, uint32_t a_level,
          std::string a_description, std::string a_edit_method, T srlEBandLocalPlannerConfig::* a_f) :
        AbstractParamDescription(a_name, a_type, a_level, a_description, a_edit_method),
        field(a_f)
      {}

      T srlEBandLocalPlannerConfig::* field;

      virtual void clamp(srlEBandLocalPlannerConfig &config, const srlEBandLocalPlannerConfig &max, const srlEBandLocalPlannerConfig &min) const override
      {
        if (config.*field > max.*field)
          config.*field = max.*field;

        if (config.*field < min.*field)
          config.*field = min.*field;
      }

      virtual void calcLevel(uint32_t &comb_level, const srlEBandLocalPlannerConfig &config1, const srlEBandLocalPlannerConfig &config2) const override
      {
        if (config1.*field != config2.*field)
          comb_level |= level;
      }

      virtual void fromServer(const ros::NodeHandle &nh, srlEBandLocalPlannerConfig &config) const override
      {
        nh.getParam(name, config.*field);
      }

      virtual void toServer(const ros::NodeHandle &nh, const srlEBandLocalPlannerConfig &config) const override
      {
        nh.setParam(name, config.*field);
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, srlEBandLocalPlannerConfig &config) const override
      {
        return dynamic_reconfigure::ConfigTools::getParameter(msg, name, config.*field);
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const srlEBandLocalPlannerConfig &config) const override
      {
        dynamic_reconfigure::ConfigTools::appendParameter(msg, name, config.*field);
      }

      virtual void getValue(const srlEBandLocalPlannerConfig &config, boost::any &val) const override
      {
        val = config.*field;
      }
    };

    class AbstractGroupDescription : public dynamic_reconfigure::Group
    {
      public:
      AbstractGroupDescription(std::string n, std::string t, int p, int i, bool s)
      {
        name = n;
        type = t;
        parent = p;
        state = s;
        id = i;
      }

      virtual ~AbstractGroupDescription() = default;

      std::vector<AbstractParamDescriptionConstPtr> abstract_parameters;
      bool state;

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &config) const =0;
      virtual void updateParams(boost::any &cfg, srlEBandLocalPlannerConfig &top) const= 0;
      virtual void setInitialState(boost::any &cfg) const = 0;


      void convertParams()
      {
        for(std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = abstract_parameters.begin(); i != abstract_parameters.end(); ++i)
        {
          parameters.push_back(dynamic_reconfigure::ParamDescription(**i));
        }
      }
    };

    typedef boost::shared_ptr<AbstractGroupDescription> AbstractGroupDescriptionPtr;
    typedef boost::shared_ptr<const AbstractGroupDescription> AbstractGroupDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template<class T, class PT>
    class GroupDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractGroupDescription
    {
    public:
      GroupDescription(std::string a_name, std::string a_type, int a_parent, int a_id, bool a_s, T PT::* a_f) : AbstractGroupDescription(a_name, a_type, a_parent, a_id, a_s), field(a_f)
      {
      }

      GroupDescription(const GroupDescription<T, PT>& g): AbstractGroupDescription(g.name, g.type, g.parent, g.id, g.state), field(g.field), groups(g.groups)
      {
        parameters = g.parameters;
        abstract_parameters = g.abstract_parameters;
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &cfg) const override
      {
        PT* config = boost::any_cast<PT*>(cfg);
        if(!dynamic_reconfigure::ConfigTools::getGroupState(msg, name, (*config).*field))
          return false;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          if(!(*i)->fromMessage(msg, n))
            return false;
        }

        return true;
      }

      virtual void setInitialState(boost::any &cfg) const override
      {
        PT* config = boost::any_cast<PT*>(cfg);
        T* group = &((*config).*field);
        group->state = state;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = boost::any(&((*config).*field));
          (*i)->setInitialState(n);
        }

      }

      virtual void updateParams(boost::any &cfg, srlEBandLocalPlannerConfig &top) const override
      {
        PT* config = boost::any_cast<PT*>(cfg);

        T* f = &((*config).*field);
        f->setParams(top, abstract_parameters);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          (*i)->updateParams(n, top);
        }
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &cfg) const override
      {
        const PT config = boost::any_cast<PT>(cfg);
        dynamic_reconfigure::ConfigTools::appendGroup<T>(msg, name, id, parent, config.*field);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          (*i)->toMessage(msg, config.*field);
        }
      }

      T PT::* field;
      std::vector<srlEBandLocalPlannerConfig::AbstractGroupDescriptionConstPtr> groups;
    };

class DEFAULT
{
  public:
    DEFAULT()
    {
      state = true;
      name = "Default";
    }

    void setParams(srlEBandLocalPlannerConfig &config, const std::vector<AbstractParamDescriptionConstPtr> params)
    {
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator _i = params.begin(); _i != params.end(); ++_i)
      {
        boost::any val;
        (*_i)->getValue(config, val);

        if("yaw_goal_tolerance_dyn"==(*_i)->name){yaw_goal_tolerance_dyn = boost::any_cast<double>(val);}
        if("xy_goal_tolerance_dyn"==(*_i)->name){xy_goal_tolerance_dyn = boost::any_cast<double>(val);}
        if("rot_stopped_vel_dyn"==(*_i)->name){rot_stopped_vel_dyn = boost::any_cast<double>(val);}
        if("trans_stopped_vel_dyn"==(*_i)->name){trans_stopped_vel_dyn = boost::any_cast<double>(val);}
        if("eband_min_relative_bubble_overlap_dyn"==(*_i)->name){eband_min_relative_bubble_overlap_dyn = boost::any_cast<double>(val);}
        if("eband_tiny_bubble_distance_dyn"==(*_i)->name){eband_tiny_bubble_distance_dyn = boost::any_cast<double>(val);}
        if("eband_tiny_bubble_expansion_dyn"==(*_i)->name){eband_tiny_bubble_expansion_dyn = boost::any_cast<double>(val);}
        if("eband_internal_force_gain_dyn"==(*_i)->name){eband_internal_force_gain_dyn = boost::any_cast<double>(val);}
        if("eband_external_force_gain_dyn"==(*_i)->name){eband_external_force_gain_dyn = boost::any_cast<double>(val);}
        if("num_iterations_eband_optimization_dyn"==(*_i)->name){num_iterations_eband_optimization_dyn = boost::any_cast<int>(val);}
        if("eband_equilibrium_approx_max_recursion_depth_dyn"==(*_i)->name){eband_equilibrium_approx_max_recursion_depth_dyn = boost::any_cast<double>(val);}
        if("eband_equilibrium_relative_overshoot_dyn"==(*_i)->name){eband_equilibrium_relative_overshoot_dyn = boost::any_cast<double>(val);}
        if("eband_significant_force_lower_bound_dyn"==(*_i)->name){eband_significant_force_lower_bound_dyn = boost::any_cast<double>(val);}
        if("max_translational_acceleration_dyn"==(*_i)->name){max_translational_acceleration_dyn = boost::any_cast<double>(val);}
        if("max_rotational_acceleration_dyn"==(*_i)->name){max_rotational_acceleration_dyn = boost::any_cast<double>(val);}
        if("max_rotational_velocity_turning_on_spot_dyn"==(*_i)->name){max_rotational_velocity_turning_on_spot_dyn = boost::any_cast<double>(val);}
        if("max_acceleration_dyn"==(*_i)->name){max_acceleration_dyn = boost::any_cast<double>(val);}
        if("limit_acc_dyn"==(*_i)->name){limit_acc_dyn = boost::any_cast<bool>(val);}
        if("max_vel_lin_dyn"==(*_i)->name){max_vel_lin_dyn = boost::any_cast<double>(val);}
        if("min_vel_lin_dyn"==(*_i)->name){min_vel_lin_dyn = boost::any_cast<double>(val);}
        if("max_vel_th_dyn"==(*_i)->name){max_vel_th_dyn = boost::any_cast<double>(val);}
        if("min_vel_th_dyn"==(*_i)->name){min_vel_th_dyn = boost::any_cast<double>(val);}
        if("min_in_place_vel_th_dyn"==(*_i)->name){min_in_place_vel_th_dyn = boost::any_cast<double>(val);}
        if("in_place_trans_vel_dyn"==(*_i)->name){in_place_trans_vel_dyn = boost::any_cast<double>(val);}
        if("rot_stopping_turn_on_the_spot_dyn"==(*_i)->name){rot_stopping_turn_on_the_spot_dyn = boost::any_cast<double>(val);}
        if("trans_vel_goal_dyn"==(*_i)->name){trans_vel_goal_dyn = boost::any_cast<double>(val);}
        if("start_to_stop_goal_dyn"==(*_i)->name){start_to_stop_goal_dyn = boost::any_cast<double>(val);}
        if("number_tentative_setting_band_dyn"==(*_i)->name){number_tentative_setting_band_dyn = boost::any_cast<int>(val);}
        if("k_prop_dyn"==(*_i)->name){k_prop_dyn = boost::any_cast<double>(val);}
        if("k_damp_dyn"==(*_i)->name){k_damp_dyn = boost::any_cast<double>(val);}
        if("Ts_dyn"==(*_i)->name){Ts_dyn = boost::any_cast<double>(val);}
        if("Kv_one_dyn"==(*_i)->name){Kv_one_dyn = boost::any_cast<double>(val);}
        if("Kv_two_dyn"==(*_i)->name){Kv_two_dyn = boost::any_cast<double>(val);}
        if("Vel_gain_dyn"==(*_i)->name){Vel_gain_dyn = boost::any_cast<double>(val);}
        if("B_dyn"==(*_i)->name){B_dyn = boost::any_cast<double>(val);}
        if("smoothed_eband_dyn"==(*_i)->name){smoothed_eband_dyn = boost::any_cast<bool>(val);}
        if("tracker_on"==(*_i)->name){tracker_on = boost::any_cast<bool>(val);}
        if("backward_motion_on_dyn"==(*_i)->name){backward_motion_on_dyn = boost::any_cast<bool>(val);}
        if("limit_vel_based_laser_points_density_dyn"==(*_i)->name){limit_vel_based_laser_points_density_dyn = boost::any_cast<bool>(val);}
        if("warning_robot_radius_dyn"==(*_i)->name){warning_robot_radius_dyn = boost::any_cast<double>(val);}
        if("max_path_length_to_check_points"==(*_i)->name){max_path_length_to_check_points = boost::any_cast<double>(val);}
        if("warning_robot_angle_dyn"==(*_i)->name){warning_robot_angle_dyn = boost::any_cast<double>(val);}
        if("max_translational_vel_due_to_laser_points_density_dyn"==(*_i)->name){max_translational_vel_due_to_laser_points_density_dyn = boost::any_cast<double>(val);}
        if("limit_vel_based_on_curvature"==(*_i)->name){limit_vel_based_on_curvature = boost::any_cast<bool>(val);}
        if("curvature_guarding_thrs"==(*_i)->name){curvature_guarding_thrs = boost::any_cast<double>(val);}
        if("min_vel_limited_curvature"==(*_i)->name){min_vel_limited_curvature = boost::any_cast<double>(val);}
        if("limit_vel_based_collision_warnings"==(*_i)->name){limit_vel_based_collision_warnings = boost::any_cast<bool>(val);}
        if("max_vel_collision_warning"==(*_i)->name){max_vel_collision_warning = boost::any_cast<double>(val);}
        if("human_legibility_on_dyn"==(*_i)->name){human_legibility_on_dyn = boost::any_cast<bool>(val);}
        if("cc_d_low"==(*_i)->name){cc_d_low = boost::any_cast<double>(val);}
        if("cc_d_high"==(*_i)->name){cc_d_high = boost::any_cast<double>(val);}
        if("cc_alpha_max"==(*_i)->name){cc_alpha_max = boost::any_cast<double>(val);}
        if("cc_beta"==(*_i)->name){cc_beta = boost::any_cast<double>(val);}
        if("cc_min_scale"==(*_i)->name){cc_min_scale = boost::any_cast<double>(val);}
        if("publish_predictions"==(*_i)->name){publish_predictions = boost::any_cast<bool>(val);}
        if("sim_time"==(*_i)->name){sim_time = boost::any_cast<double>(val);}
        if("publish_curr_traj"==(*_i)->name){publish_curr_traj = boost::any_cast<bool>(val);}
        if("min_alert_dist_tracks_dyn"==(*_i)->name){min_alert_dist_tracks_dyn = boost::any_cast<double>(val);}
        if("max_ang_range_tracks_dyn"==(*_i)->name){max_ang_range_tracks_dyn = boost::any_cast<double>(val);}
        if("check_costmap_layers_dyn"==(*_i)->name){check_costmap_layers_dyn = boost::any_cast<bool>(val);}
        if("hr_message"==(*_i)->name){hr_message = boost::any_cast<std::string>(val);}
        if("limit_vel_based_on_hri"==(*_i)->name){limit_vel_based_on_hri = boost::any_cast<bool>(val);}
        if("max_lin_vel_hri"==(*_i)->name){max_lin_vel_hri = boost::any_cast<double>(val);}
        if("waiting_time_hri_message"==(*_i)->name){waiting_time_hri_message = boost::any_cast<double>(val);}
      }
    }

    double yaw_goal_tolerance_dyn;
double xy_goal_tolerance_dyn;
double rot_stopped_vel_dyn;
double trans_stopped_vel_dyn;
double eband_min_relative_bubble_overlap_dyn;
double eband_tiny_bubble_distance_dyn;
double eband_tiny_bubble_expansion_dyn;
double eband_internal_force_gain_dyn;
double eband_external_force_gain_dyn;
int num_iterations_eband_optimization_dyn;
double eband_equilibrium_approx_max_recursion_depth_dyn;
double eband_equilibrium_relative_overshoot_dyn;
double eband_significant_force_lower_bound_dyn;
double max_translational_acceleration_dyn;
double max_rotational_acceleration_dyn;
double max_rotational_velocity_turning_on_spot_dyn;
double max_acceleration_dyn;
bool limit_acc_dyn;
double max_vel_lin_dyn;
double min_vel_lin_dyn;
double max_vel_th_dyn;
double min_vel_th_dyn;
double min_in_place_vel_th_dyn;
double in_place_trans_vel_dyn;
double rot_stopping_turn_on_the_spot_dyn;
double trans_vel_goal_dyn;
double start_to_stop_goal_dyn;
int number_tentative_setting_band_dyn;
double k_prop_dyn;
double k_damp_dyn;
double Ts_dyn;
double Kv_one_dyn;
double Kv_two_dyn;
double Vel_gain_dyn;
double B_dyn;
bool smoothed_eband_dyn;
bool tracker_on;
bool backward_motion_on_dyn;
bool limit_vel_based_laser_points_density_dyn;
double warning_robot_radius_dyn;
double max_path_length_to_check_points;
double warning_robot_angle_dyn;
double max_translational_vel_due_to_laser_points_density_dyn;
bool limit_vel_based_on_curvature;
double curvature_guarding_thrs;
double min_vel_limited_curvature;
bool limit_vel_based_collision_warnings;
double max_vel_collision_warning;
bool human_legibility_on_dyn;
double cc_d_low;
double cc_d_high;
double cc_alpha_max;
double cc_beta;
double cc_min_scale;
bool publish_predictions;
double sim_time;
bool publish_curr_traj;
double min_alert_dist_tracks_dyn;
double max_ang_range_tracks_dyn;
bool check_costmap_layers_dyn;
std::string hr_message;
bool limit_vel_based_on_hri;
double max_lin_vel_hri;
double waiting_time_hri_message;

    bool state;
    std::string name;

    
}groups;



//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double yaw_goal_tolerance_dyn;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double xy_goal_tolerance_dyn;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double rot_stopped_vel_dyn;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double trans_stopped_vel_dyn;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double eband_min_relative_bubble_overlap_dyn;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double eband_tiny_bubble_distance_dyn;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double eband_tiny_bubble_expansion_dyn;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double eband_internal_force_gain_dyn;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double eband_external_force_gain_dyn;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int num_iterations_eband_optimization_dyn;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double eband_equilibrium_approx_max_recursion_depth_dyn;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double eband_equilibrium_relative_overshoot_dyn;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double eband_significant_force_lower_bound_dyn;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double max_translational_acceleration_dyn;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double max_rotational_acceleration_dyn;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double max_rotational_velocity_turning_on_spot_dyn;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double max_acceleration_dyn;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool limit_acc_dyn;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double max_vel_lin_dyn;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double min_vel_lin_dyn;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double max_vel_th_dyn;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double min_vel_th_dyn;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double min_in_place_vel_th_dyn;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double in_place_trans_vel_dyn;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double rot_stopping_turn_on_the_spot_dyn;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double trans_vel_goal_dyn;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double start_to_stop_goal_dyn;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int number_tentative_setting_band_dyn;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double k_prop_dyn;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double k_damp_dyn;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double Ts_dyn;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double Kv_one_dyn;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double Kv_two_dyn;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double Vel_gain_dyn;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double B_dyn;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool smoothed_eband_dyn;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool tracker_on;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool backward_motion_on_dyn;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool limit_vel_based_laser_points_density_dyn;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double warning_robot_radius_dyn;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double max_path_length_to_check_points;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double warning_robot_angle_dyn;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double max_translational_vel_due_to_laser_points_density_dyn;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool limit_vel_based_on_curvature;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double curvature_guarding_thrs;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double min_vel_limited_curvature;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool limit_vel_based_collision_warnings;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double max_vel_collision_warning;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool human_legibility_on_dyn;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double cc_d_low;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double cc_d_high;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double cc_alpha_max;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double cc_beta;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double cc_min_scale;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool publish_predictions;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double sim_time;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool publish_curr_traj;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double min_alert_dist_tracks_dyn;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double max_ang_range_tracks_dyn;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool check_costmap_layers_dyn;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      std::string hr_message;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool limit_vel_based_on_hri;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double max_lin_vel_hri;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double waiting_time_hri_message;
//#line 231 "/opt/ros/noetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

    bool __fromMessage__(dynamic_reconfigure::Config &msg)
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();

      int count = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        if ((*i)->fromMessage(msg, *this))
          count++;

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i ++)
      {
        if ((*i)->id == 0)
        {
          boost::any n = boost::any(this);
          (*i)->updateParams(n, *this);
          (*i)->fromMessage(msg, n);
        }
      }

      if (count != dynamic_reconfigure::ConfigTools::size(msg))
      {
        ROS_ERROR("srlEBandLocalPlannerConfig::__fromMessage__ called with an unexpected parameter.");
        ROS_ERROR("Booleans:");
        for (unsigned int i = 0; i < msg.bools.size(); i++)
          ROS_ERROR("  %s", msg.bools[i].name.c_str());
        ROS_ERROR("Integers:");
        for (unsigned int i = 0; i < msg.ints.size(); i++)
          ROS_ERROR("  %s", msg.ints[i].name.c_str());
        ROS_ERROR("Doubles:");
        for (unsigned int i = 0; i < msg.doubles.size(); i++)
          ROS_ERROR("  %s", msg.doubles[i].name.c_str());
        ROS_ERROR("Strings:");
        for (unsigned int i = 0; i < msg.strs.size(); i++)
          ROS_ERROR("  %s", msg.strs[i].name.c_str());
        // @todo Check that there are no duplicates. Make this error more
        // explicit.
        return false;
      }
      return true;
    }

    // This version of __toMessage__ is used during initialization of
    // statics when __getParamDescriptions__ can't be called yet.
    void __toMessage__(dynamic_reconfigure::Config &msg, const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__, const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__) const
    {
      dynamic_reconfigure::ConfigTools::clear(msg);
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toMessage(msg, *this);

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        if((*i)->id == 0)
        {
          (*i)->toMessage(msg, *this);
        }
      }
    }

    void __toMessage__(dynamic_reconfigure::Config &msg) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      __toMessage__(msg, __param_descriptions__, __group_descriptions__);
    }

    void __toServer__(const ros::NodeHandle &nh) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toServer(nh, *this);
    }

    void __fromServer__(const ros::NodeHandle &nh)
    {
      static bool setup=false;

      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->fromServer(nh, *this);

      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i++){
        if (!setup && (*i)->id == 0) {
          setup = true;
          boost::any n = boost::any(this);
          (*i)->setInitialState(n);
        }
      }
    }

    void __clamp__()
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const srlEBandLocalPlannerConfig &__max__ = __getMax__();
      const srlEBandLocalPlannerConfig &__min__ = __getMin__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->clamp(*this, __max__, __min__);
    }

    uint32_t __level__(const srlEBandLocalPlannerConfig &config) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      uint32_t level = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->calcLevel(level, config, *this);
      return level;
    }

    static const dynamic_reconfigure::ConfigDescription &__getDescriptionMessage__();
    static const srlEBandLocalPlannerConfig &__getDefault__();
    static const srlEBandLocalPlannerConfig &__getMax__();
    static const srlEBandLocalPlannerConfig &__getMin__();
    static const std::vector<AbstractParamDescriptionConstPtr> &__getParamDescriptions__();
    static const std::vector<AbstractGroupDescriptionConstPtr> &__getGroupDescriptions__();

  private:
    static const srlEBandLocalPlannerConfigStatics *__get_statics__();
  };

  template <> // Max and min are ignored for strings.
  inline void srlEBandLocalPlannerConfig::ParamDescription<std::string>::clamp(srlEBandLocalPlannerConfig &config, const srlEBandLocalPlannerConfig &max, const srlEBandLocalPlannerConfig &min) const
  {
    (void) config;
    (void) min;
    (void) max;
    return;
  }

  class srlEBandLocalPlannerConfigStatics
  {
    friend class srlEBandLocalPlannerConfig;

    srlEBandLocalPlannerConfigStatics()
    {
srlEBandLocalPlannerConfig::GroupDescription<srlEBandLocalPlannerConfig::DEFAULT, srlEBandLocalPlannerConfig> Default("Default", "", 0, 0, true, &srlEBandLocalPlannerConfig::groups);
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.yaw_goal_tolerance_dyn = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.yaw_goal_tolerance_dyn = 1.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.yaw_goal_tolerance_dyn = 0.2;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("yaw_goal_tolerance_dyn", "double", 0, "yaw_goal_tolerance", "", &srlEBandLocalPlannerConfig::yaw_goal_tolerance_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("yaw_goal_tolerance_dyn", "double", 0, "yaw_goal_tolerance", "", &srlEBandLocalPlannerConfig::yaw_goal_tolerance_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.xy_goal_tolerance_dyn = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.xy_goal_tolerance_dyn = 1.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.xy_goal_tolerance_dyn = 0.35;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("xy_goal_tolerance_dyn", "double", 0, "xy_goal_tolerancer", "", &srlEBandLocalPlannerConfig::xy_goal_tolerance_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("xy_goal_tolerance_dyn", "double", 0, "xy_goal_tolerancer", "", &srlEBandLocalPlannerConfig::xy_goal_tolerance_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.rot_stopped_vel_dyn = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.rot_stopped_vel_dyn = 1.3;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.rot_stopped_vel_dyn = 0.01;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("rot_stopped_vel_dyn", "double", 0, "Min rot velocity", "", &srlEBandLocalPlannerConfig::rot_stopped_vel_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("rot_stopped_vel_dyn", "double", 0, "Min rot velocity", "", &srlEBandLocalPlannerConfig::rot_stopped_vel_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.trans_stopped_vel_dyn = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.trans_stopped_vel_dyn = 1.3;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.trans_stopped_vel_dyn = 0.01;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("trans_stopped_vel_dyn", "double", 0, "Min Trans velocity", "", &srlEBandLocalPlannerConfig::trans_stopped_vel_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("trans_stopped_vel_dyn", "double", 0, "Min Trans velocity", "", &srlEBandLocalPlannerConfig::trans_stopped_vel_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.eband_min_relative_bubble_overlap_dyn = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.eband_min_relative_bubble_overlap_dyn = 10.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.eband_min_relative_bubble_overlap_dyn = 0.7;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("eband_min_relative_bubble_overlap_dyn", "double", 0, "eband_min_relative_bubble_overlap", "", &srlEBandLocalPlannerConfig::eband_min_relative_bubble_overlap_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("eband_min_relative_bubble_overlap_dyn", "double", 0, "eband_min_relative_bubble_overlap", "", &srlEBandLocalPlannerConfig::eband_min_relative_bubble_overlap_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.eband_tiny_bubble_distance_dyn = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.eband_tiny_bubble_distance_dyn = 100.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.eband_tiny_bubble_distance_dyn = 0.01;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("eband_tiny_bubble_distance_dyn", "double", 0, "eband_tiny_bubble_distance", "", &srlEBandLocalPlannerConfig::eband_tiny_bubble_distance_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("eband_tiny_bubble_distance_dyn", "double", 0, "eband_tiny_bubble_distance", "", &srlEBandLocalPlannerConfig::eband_tiny_bubble_distance_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.eband_tiny_bubble_expansion_dyn = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.eband_tiny_bubble_expansion_dyn = 100.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.eband_tiny_bubble_expansion_dyn = 0.01;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("eband_tiny_bubble_expansion_dyn", "double", 0, "eband_tiny_bubble_expansion", "", &srlEBandLocalPlannerConfig::eband_tiny_bubble_expansion_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("eband_tiny_bubble_expansion_dyn", "double", 0, "eband_tiny_bubble_expansion", "", &srlEBandLocalPlannerConfig::eband_tiny_bubble_expansion_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.eband_internal_force_gain_dyn = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.eband_internal_force_gain_dyn = 100.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.eband_internal_force_gain_dyn = 1.5;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("eband_internal_force_gain_dyn", "double", 0, "eband_internal_force_gain", "", &srlEBandLocalPlannerConfig::eband_internal_force_gain_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("eband_internal_force_gain_dyn", "double", 0, "eband_internal_force_gain", "", &srlEBandLocalPlannerConfig::eband_internal_force_gain_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.eband_external_force_gain_dyn = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.eband_external_force_gain_dyn = 100.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.eband_external_force_gain_dyn = 0.65;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("eband_external_force_gain_dyn", "double", 0, "eband_external_force_gain", "", &srlEBandLocalPlannerConfig::eband_external_force_gain_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("eband_external_force_gain_dyn", "double", 0, "eband_external_force_gain", "", &srlEBandLocalPlannerConfig::eband_external_force_gain_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.num_iterations_eband_optimization_dyn = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.num_iterations_eband_optimization_dyn = 100;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.num_iterations_eband_optimization_dyn = 6;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<int>("num_iterations_eband_optimization_dyn", "int", 0, "num_iterations_eband_optimization", "", &srlEBandLocalPlannerConfig::num_iterations_eband_optimization_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<int>("num_iterations_eband_optimization_dyn", "int", 0, "num_iterations_eband_optimization", "", &srlEBandLocalPlannerConfig::num_iterations_eband_optimization_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.eband_equilibrium_approx_max_recursion_depth_dyn = 1.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.eband_equilibrium_approx_max_recursion_depth_dyn = 100.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.eband_equilibrium_approx_max_recursion_depth_dyn = 4.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("eband_equilibrium_approx_max_recursion_depth_dyn", "double", 0, "eband_equilibrium_approx_max_recursion_depth", "", &srlEBandLocalPlannerConfig::eband_equilibrium_approx_max_recursion_depth_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("eband_equilibrium_approx_max_recursion_depth_dyn", "double", 0, "eband_equilibrium_approx_max_recursion_depth", "", &srlEBandLocalPlannerConfig::eband_equilibrium_approx_max_recursion_depth_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.eband_equilibrium_relative_overshoot_dyn = 0.1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.eband_equilibrium_relative_overshoot_dyn = 100.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.eband_equilibrium_relative_overshoot_dyn = 0.75;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("eband_equilibrium_relative_overshoot_dyn", "double", 0, "eband_equilibrium_relative_overshoot", "", &srlEBandLocalPlannerConfig::eband_equilibrium_relative_overshoot_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("eband_equilibrium_relative_overshoot_dyn", "double", 0, "eband_equilibrium_relative_overshoot", "", &srlEBandLocalPlannerConfig::eband_equilibrium_relative_overshoot_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.eband_significant_force_lower_bound_dyn = 0.1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.eband_significant_force_lower_bound_dyn = 100.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.eband_significant_force_lower_bound_dyn = 0.15;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("eband_significant_force_lower_bound_dyn", "double", 0, "eband_significant_force_lower_bound", "", &srlEBandLocalPlannerConfig::eband_significant_force_lower_bound_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("eband_significant_force_lower_bound_dyn", "double", 0, "eband_significant_force_lower_bound", "", &srlEBandLocalPlannerConfig::eband_significant_force_lower_bound_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.max_translational_acceleration_dyn = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.max_translational_acceleration_dyn = 100.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.max_translational_acceleration_dyn = 0.125;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("max_translational_acceleration_dyn", "double", 0, "max_translational_acceleration", "", &srlEBandLocalPlannerConfig::max_translational_acceleration_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("max_translational_acceleration_dyn", "double", 0, "max_translational_acceleration", "", &srlEBandLocalPlannerConfig::max_translational_acceleration_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.max_rotational_acceleration_dyn = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.max_rotational_acceleration_dyn = 100.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.max_rotational_acceleration_dyn = 0.9;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("max_rotational_acceleration_dyn", "double", 0, "max_rotational_acceleration", "", &srlEBandLocalPlannerConfig::max_rotational_acceleration_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("max_rotational_acceleration_dyn", "double", 0, "max_rotational_acceleration", "", &srlEBandLocalPlannerConfig::max_rotational_acceleration_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.max_rotational_velocity_turning_on_spot_dyn = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.max_rotational_velocity_turning_on_spot_dyn = 3.14;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.max_rotational_velocity_turning_on_spot_dyn = 0.25;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("max_rotational_velocity_turning_on_spot_dyn", "double", 0, "max_rotational_velocity turning on the post", "", &srlEBandLocalPlannerConfig::max_rotational_velocity_turning_on_spot_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("max_rotational_velocity_turning_on_spot_dyn", "double", 0, "max_rotational_velocity turning on the post", "", &srlEBandLocalPlannerConfig::max_rotational_velocity_turning_on_spot_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.max_acceleration_dyn = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.max_acceleration_dyn = 100.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.max_acceleration_dyn = 0.1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("max_acceleration_dyn", "double", 0, "max_acceleration", "", &srlEBandLocalPlannerConfig::max_acceleration_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("max_acceleration_dyn", "double", 0, "max_acceleration", "", &srlEBandLocalPlannerConfig::max_acceleration_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.limit_acc_dyn = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.limit_acc_dyn = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.limit_acc_dyn = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<bool>("limit_acc_dyn", "bool", 0, "Limit the variation of the velocity (reads as input max_translational_acceleration_dyn)", "", &srlEBandLocalPlannerConfig::limit_acc_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<bool>("limit_acc_dyn", "bool", 0, "Limit the variation of the velocity (reads as input max_translational_acceleration_dyn)", "", &srlEBandLocalPlannerConfig::limit_acc_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.max_vel_lin_dyn = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.max_vel_lin_dyn = 100.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.max_vel_lin_dyn = 1.3;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("max_vel_lin_dyn", "double", 0, "max_vel_lin", "", &srlEBandLocalPlannerConfig::max_vel_lin_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("max_vel_lin_dyn", "double", 0, "max_vel_lin", "", &srlEBandLocalPlannerConfig::max_vel_lin_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.min_vel_lin_dyn = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.min_vel_lin_dyn = 100.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.min_vel_lin_dyn = 0.05;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("min_vel_lin_dyn", "double", 0, "min_vel_lin", "", &srlEBandLocalPlannerConfig::min_vel_lin_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("min_vel_lin_dyn", "double", 0, "min_vel_lin", "", &srlEBandLocalPlannerConfig::min_vel_lin_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.max_vel_th_dyn = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.max_vel_th_dyn = 100.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.max_vel_th_dyn = 1.57;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("max_vel_th_dyn", "double", 0, "max_vel_th", "", &srlEBandLocalPlannerConfig::max_vel_th_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("max_vel_th_dyn", "double", 0, "max_vel_th", "", &srlEBandLocalPlannerConfig::max_vel_th_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.min_vel_th_dyn = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.min_vel_th_dyn = 100.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.min_vel_th_dyn = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("min_vel_th_dyn", "double", 0, "max_in_place_vel_th", "", &srlEBandLocalPlannerConfig::min_vel_th_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("min_vel_th_dyn", "double", 0, "max_in_place_vel_th", "", &srlEBandLocalPlannerConfig::min_vel_th_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.min_in_place_vel_th_dyn = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.min_in_place_vel_th_dyn = 100.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.min_in_place_vel_th_dyn = 0.15;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("min_in_place_vel_th_dyn", "double", 0, "min_in_place_vel_th", "", &srlEBandLocalPlannerConfig::min_in_place_vel_th_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("min_in_place_vel_th_dyn", "double", 0, "min_in_place_vel_th", "", &srlEBandLocalPlannerConfig::min_in_place_vel_th_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.in_place_trans_vel_dyn = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.in_place_trans_vel_dyn = 100.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.in_place_trans_vel_dyn = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("in_place_trans_vel_dyn", "double", 0, "in_place_trans_vel", "", &srlEBandLocalPlannerConfig::in_place_trans_vel_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("in_place_trans_vel_dyn", "double", 0, "in_place_trans_vel", "", &srlEBandLocalPlannerConfig::in_place_trans_vel_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.rot_stopping_turn_on_the_spot_dyn = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.rot_stopping_turn_on_the_spot_dyn = 1.54;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.rot_stopping_turn_on_the_spot_dyn = 0.02;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("rot_stopping_turn_on_the_spot_dyn", "double", 0, "To which yaw value to stop the turning on the spot", "", &srlEBandLocalPlannerConfig::rot_stopping_turn_on_the_spot_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("rot_stopping_turn_on_the_spot_dyn", "double", 0, "To which yaw value to stop the turning on the spot", "", &srlEBandLocalPlannerConfig::rot_stopping_turn_on_the_spot_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.trans_vel_goal_dyn = 0.1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.trans_vel_goal_dyn = 1.3;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.trans_vel_goal_dyn = 0.5;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("trans_vel_goal_dyn", "double", 0, "translational vel while approaching", "", &srlEBandLocalPlannerConfig::trans_vel_goal_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("trans_vel_goal_dyn", "double", 0, "translational vel while approaching", "", &srlEBandLocalPlannerConfig::trans_vel_goal_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.start_to_stop_goal_dyn = 1.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.start_to_stop_goal_dyn = 5.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.start_to_stop_goal_dyn = 1.5;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("start_to_stop_goal_dyn", "double", 0, "Start distance to stop the robot", "", &srlEBandLocalPlannerConfig::start_to_stop_goal_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("start_to_stop_goal_dyn", "double", 0, "Start distance to stop the robot", "", &srlEBandLocalPlannerConfig::start_to_stop_goal_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.number_tentative_setting_band_dyn = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.number_tentative_setting_band_dyn = 50;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.number_tentative_setting_band_dyn = 2;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<int>("number_tentative_setting_band_dyn", "int", 0, "Number of attemps to fix the band", "", &srlEBandLocalPlannerConfig::number_tentative_setting_band_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<int>("number_tentative_setting_band_dyn", "int", 0, "Number of attemps to fix the band", "", &srlEBandLocalPlannerConfig::number_tentative_setting_band_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.k_prop_dyn = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.k_prop_dyn = 100.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.k_prop_dyn = 1.5;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("k_prop_dyn", "double", 0, "k_prop", "", &srlEBandLocalPlannerConfig::k_prop_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("k_prop_dyn", "double", 0, "k_prop", "", &srlEBandLocalPlannerConfig::k_prop_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.k_damp_dyn = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.k_damp_dyn = 100.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.k_damp_dyn = 3.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("k_damp_dyn", "double", 0, "k_damp", "", &srlEBandLocalPlannerConfig::k_damp_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("k_damp_dyn", "double", 0, "k_damp", "", &srlEBandLocalPlannerConfig::k_damp_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.Ts_dyn = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.Ts_dyn = 100.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.Ts_dyn = 0.1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("Ts_dyn", "double", 0, "Ts", "", &srlEBandLocalPlannerConfig::Ts_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("Ts_dyn", "double", 0, "Ts", "", &srlEBandLocalPlannerConfig::Ts_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.Kv_one_dyn = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.Kv_one_dyn = 100.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.Kv_one_dyn = 0.9;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("Kv_one_dyn", "double", 0, "Kv_one", "", &srlEBandLocalPlannerConfig::Kv_one_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("Kv_one_dyn", "double", 0, "Kv_one", "", &srlEBandLocalPlannerConfig::Kv_one_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.Kv_two_dyn = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.Kv_two_dyn = 100.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.Kv_two_dyn = 0.9;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("Kv_two_dyn", "double", 0, "Kv_two", "", &srlEBandLocalPlannerConfig::Kv_two_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("Kv_two_dyn", "double", 0, "Kv_two", "", &srlEBandLocalPlannerConfig::Kv_two_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.Vel_gain_dyn = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.Vel_gain_dyn = 100.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.Vel_gain_dyn = 2.745;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("Vel_gain_dyn", "double", 0, "Vel_gain", "", &srlEBandLocalPlannerConfig::Vel_gain_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("Vel_gain_dyn", "double", 0, "Vel_gain", "", &srlEBandLocalPlannerConfig::Vel_gain_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.B_dyn = 0.01;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.B_dyn = 100.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.B_dyn = 0.7;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("B_dyn", "double", 0, "B", "", &srlEBandLocalPlannerConfig::B_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("B_dyn", "double", 0, "B", "", &srlEBandLocalPlannerConfig::B_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.smoothed_eband_dyn = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.smoothed_eband_dyn = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.smoothed_eband_dyn = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<bool>("smoothed_eband_dyn", "bool", 0, "smoothed_eband", "", &srlEBandLocalPlannerConfig::smoothed_eband_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<bool>("smoothed_eband_dyn", "bool", 0, "smoothed_eband", "", &srlEBandLocalPlannerConfig::smoothed_eband_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.tracker_on = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.tracker_on = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.tracker_on = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<bool>("tracker_on", "bool", 0, "tracker_on", "", &srlEBandLocalPlannerConfig::tracker_on)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<bool>("tracker_on", "bool", 0, "tracker_on", "", &srlEBandLocalPlannerConfig::tracker_on)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.backward_motion_on_dyn = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.backward_motion_on_dyn = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.backward_motion_on_dyn = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<bool>("backward_motion_on_dyn", "bool", 0, "backward_motion_on", "", &srlEBandLocalPlannerConfig::backward_motion_on_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<bool>("backward_motion_on_dyn", "bool", 0, "backward_motion_on", "", &srlEBandLocalPlannerConfig::backward_motion_on_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.limit_vel_based_laser_points_density_dyn = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.limit_vel_based_laser_points_density_dyn = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.limit_vel_based_laser_points_density_dyn = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<bool>("limit_vel_based_laser_points_density_dyn", "bool", 0, "Check if to limit the translational velocity based on laser points density", "", &srlEBandLocalPlannerConfig::limit_vel_based_laser_points_density_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<bool>("limit_vel_based_laser_points_density_dyn", "bool", 0, "Check if to limit the translational velocity based on laser points density", "", &srlEBandLocalPlannerConfig::limit_vel_based_laser_points_density_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.warning_robot_radius_dyn = 0.1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.warning_robot_radius_dyn = 30.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.warning_robot_radius_dyn = 0.45;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("warning_robot_radius_dyn", "double", 0, "Radius in which check how many point are close to the robot", "", &srlEBandLocalPlannerConfig::warning_robot_radius_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("warning_robot_radius_dyn", "double", 0, "Radius in which check how many point are close to the robot", "", &srlEBandLocalPlannerConfig::warning_robot_radius_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.max_path_length_to_check_points = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.max_path_length_to_check_points = 20.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.max_path_length_to_check_points = 3.2;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("max_path_length_to_check_points", "double", 0, "Maximum path length into which to check if a laser point is into the path", "", &srlEBandLocalPlannerConfig::max_path_length_to_check_points)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("max_path_length_to_check_points", "double", 0, "Maximum path length into which to check if a laser point is into the path", "", &srlEBandLocalPlannerConfig::max_path_length_to_check_points)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.warning_robot_angle_dyn = 0.1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.warning_robot_angle_dyn = 10.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.warning_robot_angle_dyn = 0.9;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("warning_robot_angle_dyn", "double", 0, "warning_robot_angle_", "", &srlEBandLocalPlannerConfig::warning_robot_angle_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("warning_robot_angle_dyn", "double", 0, "warning_robot_angle_", "", &srlEBandLocalPlannerConfig::warning_robot_angle_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.max_translational_vel_due_to_laser_points_density_dyn = 0.1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.max_translational_vel_due_to_laser_points_density_dyn = 10.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.max_translational_vel_due_to_laser_points_density_dyn = 0.65;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("max_translational_vel_due_to_laser_points_density_dyn", "double", 0, "max_translational_vel_due_to_laser_points_density_dyn", "", &srlEBandLocalPlannerConfig::max_translational_vel_due_to_laser_points_density_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("max_translational_vel_due_to_laser_points_density_dyn", "double", 0, "max_translational_vel_due_to_laser_points_density_dyn", "", &srlEBandLocalPlannerConfig::max_translational_vel_due_to_laser_points_density_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.limit_vel_based_on_curvature = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.limit_vel_based_on_curvature = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.limit_vel_based_on_curvature = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<bool>("limit_vel_based_on_curvature", "bool", 0, "Limiting Velocities based on curvature", "", &srlEBandLocalPlannerConfig::limit_vel_based_on_curvature)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<bool>("limit_vel_based_on_curvature", "bool", 0, "Limiting Velocities based on curvature", "", &srlEBandLocalPlannerConfig::limit_vel_based_on_curvature)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.curvature_guarding_thrs = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.curvature_guarding_thrs = 100.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.curvature_guarding_thrs = 0.75;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("curvature_guarding_thrs", "double", 0, "Max Value of Curvature above which the planner starts to decrase velocity", "", &srlEBandLocalPlannerConfig::curvature_guarding_thrs)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("curvature_guarding_thrs", "double", 0, "Max Value of Curvature above which the planner starts to decrase velocity", "", &srlEBandLocalPlannerConfig::curvature_guarding_thrs)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.min_vel_limited_curvature = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.min_vel_limited_curvature = 100.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.min_vel_limited_curvature = 0.75;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("min_vel_limited_curvature", "double", 0, "Max Value of Curvature above which the planner starts to decrase velocity", "", &srlEBandLocalPlannerConfig::min_vel_limited_curvature)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("min_vel_limited_curvature", "double", 0, "Max Value of Curvature above which the planner starts to decrase velocity", "", &srlEBandLocalPlannerConfig::min_vel_limited_curvature)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.limit_vel_based_collision_warnings = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.limit_vel_based_collision_warnings = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.limit_vel_based_collision_warnings = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<bool>("limit_vel_based_collision_warnings", "bool", 0, "Limiting Velocities based on collision warnings", "", &srlEBandLocalPlannerConfig::limit_vel_based_collision_warnings)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<bool>("limit_vel_based_collision_warnings", "bool", 0, "Limiting Velocities based on collision warnings", "", &srlEBandLocalPlannerConfig::limit_vel_based_collision_warnings)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.max_vel_collision_warning = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.max_vel_collision_warning = 1.3;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.max_vel_collision_warning = 0.65;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("max_vel_collision_warning", "double", 0, "Max Value of the velocity if collision warnings are on", "", &srlEBandLocalPlannerConfig::max_vel_collision_warning)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("max_vel_collision_warning", "double", 0, "Max Value of the velocity if collision warnings are on", "", &srlEBandLocalPlannerConfig::max_vel_collision_warning)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.human_legibility_on_dyn = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.human_legibility_on_dyn = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.human_legibility_on_dyn = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<bool>("human_legibility_on_dyn", "bool", 0, "Include velocity limitations based on human_legibility", "", &srlEBandLocalPlannerConfig::human_legibility_on_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<bool>("human_legibility_on_dyn", "bool", 0, "Include velocity limitations based on human_legibility", "", &srlEBandLocalPlannerConfig::human_legibility_on_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.cc_d_low = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.cc_d_low = 100.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.cc_d_low = 0.7;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("cc_d_low", "double", 0, "minimum distance between human and robot for comaptibility calculations", "", &srlEBandLocalPlannerConfig::cc_d_low)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("cc_d_low", "double", 0, "minimum distance between human and robot for comaptibility calculations", "", &srlEBandLocalPlannerConfig::cc_d_low)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.cc_d_high = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.cc_d_high = 100.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.cc_d_high = 10.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("cc_d_high", "double", 0, "maximum distance between human and robot for comaptibility calculations", "", &srlEBandLocalPlannerConfig::cc_d_high)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("cc_d_high", "double", 0, "maximum distance between human and robot for comaptibility calculations", "", &srlEBandLocalPlannerConfig::cc_d_high)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.cc_alpha_max = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.cc_alpha_max = 3.14;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.cc_alpha_max = 2.09;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("cc_alpha_max", "double", 0, "maximum angle difference between human and robot for comaptibility calculations", "", &srlEBandLocalPlannerConfig::cc_alpha_max)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("cc_alpha_max", "double", 0, "maximum angle difference between human and robot for comaptibility calculations", "", &srlEBandLocalPlannerConfig::cc_alpha_max)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.cc_beta = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.cc_beta = 3.14;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.cc_beta = 1.57;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("cc_beta", "double", 0, "angle from robot front to discard human for collision in comaptibility calculations", "", &srlEBandLocalPlannerConfig::cc_beta)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("cc_beta", "double", 0, "angle from robot front to discard human for collision in comaptibility calculations", "", &srlEBandLocalPlannerConfig::cc_beta)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.cc_min_scale = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.cc_min_scale = 1.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.cc_min_scale = 0.5;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("cc_min_scale", "double", 0, "minimum scaling of velocities that is always allowed regardless if humans are too near", "", &srlEBandLocalPlannerConfig::cc_min_scale)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("cc_min_scale", "double", 0, "minimum scaling of velocities that is always allowed regardless if humans are too near", "", &srlEBandLocalPlannerConfig::cc_min_scale)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.publish_predictions = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.publish_predictions = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.publish_predictions = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<bool>("publish_predictions", "bool", 0, "whether to publish visualization for human position prediction", "", &srlEBandLocalPlannerConfig::publish_predictions)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<bool>("publish_predictions", "bool", 0, "whether to publish visualization for human position prediction", "", &srlEBandLocalPlannerConfig::publish_predictions)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.sim_time = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.sim_time = std::numeric_limits<double>::infinity();
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.sim_time = 1.7;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("sim_time", "double", 0, "The amount of time to roll trajectories out for in seconds", "", &srlEBandLocalPlannerConfig::sim_time)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("sim_time", "double", 0, "The amount of time to roll trajectories out for in seconds", "", &srlEBandLocalPlannerConfig::sim_time)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.publish_curr_traj = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.publish_curr_traj = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.publish_curr_traj = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<bool>("publish_curr_traj", "bool", 0, "whether to publish visualization for predicted robot local path", "", &srlEBandLocalPlannerConfig::publish_curr_traj)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<bool>("publish_curr_traj", "bool", 0, "whether to publish visualization for predicted robot local path", "", &srlEBandLocalPlannerConfig::publish_curr_traj)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.min_alert_dist_tracks_dyn = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.min_alert_dist_tracks_dyn = 10.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.min_alert_dist_tracks_dyn = 0.75;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("min_alert_dist_tracks_dyn", "double", 0, "min_alert_dist_tracks_dyn", "", &srlEBandLocalPlannerConfig::min_alert_dist_tracks_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("min_alert_dist_tracks_dyn", "double", 0, "min_alert_dist_tracks_dyn", "", &srlEBandLocalPlannerConfig::min_alert_dist_tracks_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.max_ang_range_tracks_dyn = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.max_ang_range_tracks_dyn = 6.28;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.max_ang_range_tracks_dyn = 0.67;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("max_ang_range_tracks_dyn", "double", 0, "max_ang_range_tracks_dyn", "", &srlEBandLocalPlannerConfig::max_ang_range_tracks_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("max_ang_range_tracks_dyn", "double", 0, "max_ang_range_tracks_dyn", "", &srlEBandLocalPlannerConfig::max_ang_range_tracks_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.check_costmap_layers_dyn = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.check_costmap_layers_dyn = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.check_costmap_layers_dyn = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<bool>("check_costmap_layers_dyn", "bool", 0, "check_costmap_layers", "", &srlEBandLocalPlannerConfig::check_costmap_layers_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<bool>("check_costmap_layers_dyn", "bool", 0, "check_costmap_layers", "", &srlEBandLocalPlannerConfig::check_costmap_layers_dyn)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.hr_message = "";
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.hr_message = "";
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.hr_message = "Excuse me";
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<std::string>("hr_message", "str", 0, "The message used during the Human Robot Interaction phase", "", &srlEBandLocalPlannerConfig::hr_message)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<std::string>("hr_message", "str", 0, "The message used during the Human Robot Interaction phase", "", &srlEBandLocalPlannerConfig::hr_message)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.limit_vel_based_on_hri = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.limit_vel_based_on_hri = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.limit_vel_based_on_hri = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<bool>("limit_vel_based_on_hri", "bool", 0, "Limiting Velocities based on HRI", "", &srlEBandLocalPlannerConfig::limit_vel_based_on_hri)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<bool>("limit_vel_based_on_hri", "bool", 0, "Limiting Velocities based on HRI", "", &srlEBandLocalPlannerConfig::limit_vel_based_on_hri)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.max_lin_vel_hri = 0.1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.max_lin_vel_hri = 1.3;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.max_lin_vel_hri = 0.3;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("max_lin_vel_hri", "double", 0, "min_alert_dist_tracks_dyn", "", &srlEBandLocalPlannerConfig::max_lin_vel_hri)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("max_lin_vel_hri", "double", 0, "min_alert_dist_tracks_dyn", "", &srlEBandLocalPlannerConfig::max_lin_vel_hri)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.waiting_time_hri_message = 0.1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.waiting_time_hri_message = 50.3;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.waiting_time_hri_message = 5.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("waiting_time_hri_message", "double", 0, "min_alert_dist_tracks_dyn", "", &srlEBandLocalPlannerConfig::waiting_time_hri_message)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr(new srlEBandLocalPlannerConfig::ParamDescription<double>("waiting_time_hri_message", "double", 0, "min_alert_dist_tracks_dyn", "", &srlEBandLocalPlannerConfig::waiting_time_hri_message)));
//#line 246 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.convertParams();
//#line 246 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __group_descriptions__.push_back(srlEBandLocalPlannerConfig::AbstractGroupDescriptionConstPtr(new srlEBandLocalPlannerConfig::GroupDescription<srlEBandLocalPlannerConfig::DEFAULT, srlEBandLocalPlannerConfig>(Default)));
//#line 369 "/opt/ros/noetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

      for (std::vector<srlEBandLocalPlannerConfig::AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        __description_message__.groups.push_back(**i);
      }
      __max__.__toMessage__(__description_message__.max, __param_descriptions__, __group_descriptions__);
      __min__.__toMessage__(__description_message__.min, __param_descriptions__, __group_descriptions__);
      __default__.__toMessage__(__description_message__.dflt, __param_descriptions__, __group_descriptions__);
    }
    std::vector<srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr> __param_descriptions__;
    std::vector<srlEBandLocalPlannerConfig::AbstractGroupDescriptionConstPtr> __group_descriptions__;
    srlEBandLocalPlannerConfig __max__;
    srlEBandLocalPlannerConfig __min__;
    srlEBandLocalPlannerConfig __default__;
    dynamic_reconfigure::ConfigDescription __description_message__;

    static const srlEBandLocalPlannerConfigStatics *get_instance()
    {
      // Split this off in a separate function because I know that
      // instance will get initialized the first time get_instance is
      // called, and I am guaranteeing that get_instance gets called at
      // most once.
      static srlEBandLocalPlannerConfigStatics instance;
      return &instance;
    }
  };

  inline const dynamic_reconfigure::ConfigDescription &srlEBandLocalPlannerConfig::__getDescriptionMessage__()
  {
    return __get_statics__()->__description_message__;
  }

  inline const srlEBandLocalPlannerConfig &srlEBandLocalPlannerConfig::__getDefault__()
  {
    return __get_statics__()->__default__;
  }

  inline const srlEBandLocalPlannerConfig &srlEBandLocalPlannerConfig::__getMax__()
  {
    return __get_statics__()->__max__;
  }

  inline const srlEBandLocalPlannerConfig &srlEBandLocalPlannerConfig::__getMin__()
  {
    return __get_statics__()->__min__;
  }

  inline const std::vector<srlEBandLocalPlannerConfig::AbstractParamDescriptionConstPtr> &srlEBandLocalPlannerConfig::__getParamDescriptions__()
  {
    return __get_statics__()->__param_descriptions__;
  }

  inline const std::vector<srlEBandLocalPlannerConfig::AbstractGroupDescriptionConstPtr> &srlEBandLocalPlannerConfig::__getGroupDescriptions__()
  {
    return __get_statics__()->__group_descriptions__;
  }

  inline const srlEBandLocalPlannerConfigStatics *srlEBandLocalPlannerConfig::__get_statics__()
  {
    const static srlEBandLocalPlannerConfigStatics *statics;

    if (statics) // Common case
      return statics;

    boost::mutex::scoped_lock lock(dynamic_reconfigure::__init_mutex__);

    if (statics) // In case we lost a race.
      return statics;

    statics = srlEBandLocalPlannerConfigStatics::get_instance();

    return statics;
  }


}

#undef DYNAMIC_RECONFIGURE_FINAL

#endif // __SRLEBANDLOCALPLANNERRECONFIGURATOR_H__
